# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    python -m venv venv
    source venv/bin/activate
    python -m pip install --upgrade pip
    pip install setup
    pip install -r requirements.txt
  workingDirectory: $(projectRoot)
  displayName: 'Install dependencies and requirements'
  
#- task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(Build.SourcesDirectory)'
#     includeRootFolder: false
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
#     replaceExistingArchive: true
#     verbose: # (no value); this input is optional

#- publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
#   displayName: 'Upload package'
#   artifact: drop

jobs:
- deployment: DeploymentJob
#pool:
#  vmImage: $(vmImageName)
#environment: $(environmentName)
#strategy:
  runOnce:
    deploy:
      steps:

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
        displayName: 'Use Python version'

      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : {{ webAppName }}'
        inputs:
          azureSubscription: $(azureServiceConnectionId)
          appName: $(webAppName)
          package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
          deploymentMethod: zipDeploy

          # The following parameter is specific to the Flask example code. You may
          # or may not need a startup command for your app.

          startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
